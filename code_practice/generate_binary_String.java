// Given a string containing of ‘0’, ‘1’ and ‘?’ wildcard characters, generate all binary strings that can be formed by replacing each wildcard character by ‘0’ or ‘1’.

// Input Format
// The first line of input contains a single integer T denoting the number of test cases. Then T test cases follow. Each test case consist of two lines. The first line of each test case consists of a string S.

// Constraints
// 1 ≤ T ≤ 60 1 ≤ length of string S ≤ 30

// Output Format
// Print all binary string that can be formed by replacing each wildcard character separated by space.

// Sample Input
// 1
// 1??0?101
// Sample Output
// 10000101 10001101 10100101 10101101 11000101 11001101 11100101 11101101
// Explanation
// For the Given test case, 10000101 can be generated by replacing wildcard character from 1??0?101 by 0s.

package code_practice;

import java.util.Scanner;

public class generate_binary_String {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        for(int i = 0;i<n;i++){
            String str = sc.next();
            char[] ch = str.toCharArray();
            generate(ch,"",0);
        }
        sc.close();
    }

    private static void generate(char[] ch, String ans, int i) {
        if(i == ch.length){
            System.out.println(ans);
            return;
        }
        if(ch[i] == '?'){
            generate(ch, ans+"0", i+1);
            generate(ch, ans+"1", i+1);
        }else{
            
        generate(ch, ans+ch[i], i+1);
        }
    }
}
